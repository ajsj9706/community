<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.BoardDao">
    <resultMap id="boardMap" type="com.community.model.BoardModel">
        <id property="b_id" column="b_id"/>
        <result property="b_type" column="b_type"></result>
        <result property="b_title" column="b_title"></result>
        <result property="b_date" column="b_date"></result>
        <result property="b_count" column="b_count"></result>
        <result property="userId" column="userId"></result>

        <collection property="comments" ofType="com.community.model.CheckCommentModel">
            <result property="c_content" column="c_content"></result>
        </collection>
    </resultMap>

    <resultMap id="viewMap" type="com.community.model.ViewModel">
        <id property="b_id" column="b_id"/>
        <result property="b_type" column="b_type"></result>
        <result property="b_title" column="b_title"></result>
        <result property="b_content" column="b_content"></result>
        <result property="b_date" column="b_date"></result>
        <result property="b_count" column="b_count"></result>
        <result property="userId" column="userId"></result>

        <collection property="comments" ofType="com.community.model.CommentModel">
            <id property="c_id" column="first_c_id"></id>
            <result property="b_id" column="first_b_id"></result>
            <result property="c_content" column="first_c_content"></result>
            <result property="c_date" column="first_c_date"></result>
            <result property="userId" column="first_c_userId"></result>
            <collection property="secondComment" ofType="com.community.model.SecondCommentModel">
                <id property="second_id" column="second_id"></id>
                <result property="c_id" column="second_c_id"></result>
                <result property="c_content" column="second_c_content"></result>
                <result property="c_date" column="second_c_date"></result>
                <result property="userId" column="second_c_userId"></result>
            </collection>
        </collection>
    </resultMap>

    <select id="getBoardList" resultMap="boardMap">
        SELECT
            c.b_id, c.b_type, c.b_title, c.b_date, c.b_count, c.userId,
            cc.c_content
        FROM
            community AS c
        LEFT OUTER JOIN
            community_comment AS cc ON c.b_id = cc.b_id
        ORDER BY
            c.b_id
        DESC
    </select>

    <select id="getView" resultMap="viewMap">
        SELECT
            c.b_id, c.b_type, c.b_title, c.b_content, c.b_date, c.b_count, c.userId,
            fc.c_id AS first_c_id, fc.b_id AS first_b_id, fc.c_content AS first_c_content, fc.c_date AS first_c_date, fc.userId AS first_c_userId,
            sc.second_id AS second_id, sc.c_id AS second_c_id, sc.c_content AS second_c_content, sc.c_date AS second_c_date, sc.userId AS second_c_userId
        FROM
            community AS c
        LEFT OUTER JOIN
            community_comment AS fc ON c.b_id = fc.b_id
        LEFT OUTER JOIN
            community_comment_1 AS sc ON fc.c_id = sc.c_id
        WHERE
            c.b_id = ${b_id}
        ORDER BY
            fc.c_id
        DESC
    </select>

    <insert id="insert" parameterType="String">
        INSERT INTO
            community(b_type, b_title, b_date, b_content, userId)
        VALUES
            (#{b_type}, #{b_title}, now(), #{b_content}, #{user_id})
    </insert>

    <update id="update" parameterType="String">
        UPDATE
            community
        SET
            b_type = #{b_type}, b_title = #{b_title}, b_content = #{b_content}, b_date = now()
        WHERE
            b_id = ${b_id}
    </update>

    <update id="count" parameterType="String">
        UPDATE
            community AS c, (SELECT MAX(b_count)+1 AS result FROM community WHERE b_id = ${b_id}) AS a
        SET
            b_count = a.result
        WHERE
            b_id = ${b_id}
    </update>
    <delete id="delete" parameterType="String">
        DELETE FROM
            community
        WHERE
            b_id = ${b_id}
    </delete>

    <select id="search" resultMap="boardMap">
        SELECT
            c.b_id, c.b_type, c.b_title, c.b_date, c.b_count, c.userId,
            cc.c_content
        FROM
            community AS c
        LEFT OUTER JOIN
            community_comment AS cc ON c.b_id = cc.b_id
        WHERE
            c.b_title LIKE CONCAT('%',#{word} ,'%')
        ORDER BY
            c.b_id
        DESC
    </select>

    <select id="getRank" resultMap="boardMap">
        SELECT
            c.b_id, c.b_type, c.b_title, c.b_date, c.b_count, c.userId,
            cc.c_content
        FROM
            community AS c
        LEFT OUTER JOIN
            community_comment AS cc ON c.b_id = cc.b_id
        ORDER BY
            c.b_count
        DESC
    </select>

    <insert id="imageUpdate" parameterType="com.community.model.ImageModel">
        INSERT INTO
            community_image(b_id, image, fileName)
        VALUES
            (${b_id}, #{image}, #{fileName})
    </insert>


    <insert id="imageUpload" parameterType="com.community.model.ImageModel">
        INSERT INTO
            community_image(b_id, image, fileName)
        VALUES
            (${b_id}, #{image}, #{fileName})
    </insert>

    <select id="getImage" resultType="com.community.model.ImageModel">
        SELECT
            i_id, b_id, image, fileName
        FROM
            community_image
        WHERE
            b_id = ${b_id}
    </select>

    <select id="getViewImage" resultType="com.community.model.ImageModel">
        SELECT
            i_id, b_id, image, fileName
        FROM
            community_image
        WHERE
            i_id = ${i_id}
    </select>

    <delete id="deleteImage" parameterType="Integer">
        DELETE FROM
            community_image
        WHERE
            i_id = ${i_id}
    </delete>

    <select id="getB_id" resultType="int">
        SELECT
            MAX(b_id)
        FROM
            community
    </select>
</mapper>